AWSTemplateFormatVersion: '2025-08-19'
Description: EC2 Security and Encryption Compliance Template

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: SecureVPC

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: PrivateSubnet

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  Route:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref RouteTable

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Custom SG with no default rules"
      VpcId: !Ref VPC
      SecurityGroupIngress: []
      SecurityGroupEgress: []
      Tags:
        - Key: Name
          Value: CustomSG

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      SubnetId: !Ref PrivateSubnet
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      ImageId: ami-0c55b159cbfafe1f0  # Replace with a valid AMI ID for your region
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 30
            VolumeType: gp3
            Encrypted: true
      MetadataOptions:
        HttpTokens: required
        HttpEndpoint: enabled
      Tags:
        - Key: Name
          Value: SecureEC2Instance

  SnapshotPolicy:
    Type: AWS::DLM::LifecyclePolicy
    Properties:
      Description: "Snapshot policy with encryption"
      ExecutionRoleArn: arn:aws:iam::123456789012:role/AWSDataLifecycleManagerDefaultRole  # Replace with valid role ARN
      State: ENABLED
      PolicyDetails:
        - ResourceTypes: ["VOLUME"]
          TargetTags:
            - Key: Backup
              Value: true
          Schedules:
            - Name: DailySnapshots
              CreateRule:
                Interval: 24
                IntervalUnit: HOURS
              RetainRule:
                Count: 7
              CopyTags: true
              TagsToAdd:
                - Key: Encrypted
                  Value: true
